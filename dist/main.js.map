{"version":3,"file":"main.js","sourceRoot":"","sources":["../main.ts"],"names":[],"mappings":"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","sourcesContent":["\n\n/**\n *  UTILS  AND TEMPLATES\n */\n\ntype ImageSlide = string;\ntype Slide = ImageSlide | ITextSlide;\n\n // Images for Simple slider\n const images: ImageSlide[] = Array(7)\n .fill(1)\n .map((i, index) => `${index + 1}.jpeg`); // [1.jpeg, 2.jpeg ...]\n\n\n// Simple Slider Template\nconst simpleSliderTemplate = (source: string) => `\n   <img src=\"${source}\" alt=\"\" />\n`;\n\nconst createDOMElFromString = (domstring: string): HTMLElement => {\n const html = new DOMParser().parseFromString(domstring, \"text/html\");\n return <HTMLElement>html.body.firstChild;\n};\n\n// Slider Classes\nabstract class BaseSlider {\n protected imagePath = \"./assets/\";\n\n public currentIndex = 0;\n public el: HTMLElement;\n protected slides: HTMLElement[] = [];\n\n // TODO: add union type for slides\n abstract addSlides(slides: Slide[]): void;\n\n constructor(selector: string, private showButtons: boolean = true) {\n   this.el = document.querySelector(selector);\n }\n\n public next(): void {\n  if (++this.currentIndex > this.slides.length - 1) this.currentIndex = 0;\n  this.showSlide(this.currentIndex);\n }\n\n public previous(): void {\n   if (--this.currentIndex < 0) this.currentIndex = this.slides.length - 1;\n   this.showSlide(this.currentIndex);\n }\n\n protected showSlide(index: number): void {\n   this.slides.forEach((item, i) => {\n     if (index === i) {\n       item.classList.remove(\"is-hidden\");\n       return;\n     }\n\n     item.classList.add(\"is-hidden\");\n   });\n }\n\n private addButtons(): void {\n   const buttonsContainer = document.createElement(\"div\");\n   buttonsContainer.classList.add(\"navigation\");\n   buttonsContainer.classList.add(\"has-text-centered\");\n   buttonsContainer.innerHTML = `\n       <button class=\"prev button is-info\">Previous</button>\n       <button class=\"next button is-info\">Next</button>\n     `;\n\n   const prevButton = buttonsContainer.querySelector(\".prev\");\n   const nextButton = buttonsContainer.querySelector(\".next\");\n   prevButton.addEventListener(\"click\", () => this.previous());\n   nextButton.addEventListener(\"click\", () => this.next());\n\n   this.el.appendChild(buttonsContainer);\n }\n\n public render(): void {\n   this.slides.forEach((item, index) => {\n     item.classList.add('fadeIn'); // adds fadeIn animation\n     if (index !== 0) {\n       item.classList.add(\"is-hidden\");\n     }\n\n     this.el.appendChild(item);\n   });\n   if (this.showButtons) {\n     this.addButtons();\n   }\n }\n}\n\nclass SimpleSlider extends BaseSlider {\n constructor(selector: string, showButtons = true) {\n   super(selector, showButtons);\n }\n\n addSlides(images: ImageSlide[]) {\n   if (Array.isArray(images)) {\n     const createSlideElement = (image: ImageSlide) => {\n       const imgString: string = simpleSliderTemplate(this.imagePath + image);\n       return createDOMElFromString(imgString);\n     };\n\n     this.slides = images.map(slide => createSlideElement(slide));\n   }\n }\n}\n\nenum TextSlideCssClass {\n  isPrimary = \"is-primary\",\n  isSuccess = \"is-success\",\n  isInfo = \"is-info\",\n}\n\n// Text Slide interface\ninterface ITextSlide {\n  title: string;\n  subtitle: string;\n  baseClass?: TextSlideCssClass;\n }\n\nclass TextSlide implements ITextSlide {\n  title: string;\n  subtitle: string;\n  baseClass?: TextSlideCssClass;\n  \n  public constructor(init: ITextSlide) {\n    Object.assign(this, init);\n  }\n}\n\nconst textSlides: TextSlide[] = [\n new TextSlide ({\n   title: 'Angular',\n   subtitle: 'is awesome'\n }),\n new TextSlide ({\n   title: 'Typescript',\n   subtitle: 'is awesome',\n   baseClass: TextSlideCssClass.isInfo\n }),\n new TextSlide ({\n   title: 'Lorem Ipsum',\n   subtitle: 'dolorem',\n   baseClass: TextSlideCssClass.isSuccess\n })\n];\n \nconst textSliderTemplate = (textSlide: ITextSlide) => `\n<section class=\"hero is-medium ${\n textSlide.baseClass ? textSlide.baseClass : TextSlideCssClass.isPrimary\n} is-bold\">\n   <div class=\"hero-body\">\n   <div class=\"container\">\n       <h1 class=\"title\">\n       ${textSlide.title}\n       </h1>\n       <h2 class=\"subtitle\">\n       ${textSlide.subtitle}\n       </h2>\n   </div>\n   </div>\n</section>`;\n\nclass TextSlider extends BaseSlider {\n addSlides(slides: ITextSlide[]) {\n  if (Array.isArray(images)) {\n    const createSlideElement = (slide: ITextSlide) => {\n      const elementHtml: string = textSliderTemplate(slide);\n      return createDOMElFromString(elementHtml);\n    };\n\n    this.slides = slides.map(source => createSlideElement(source));\n  }\n }\n}\n\n\nclass AutomaticSlider extends TextSlider {\n constructor(selector: string) {\n  super(selector, false);\n }\n\n public render(): void {\n   setInterval(this.next.bind(this), 1000);\n   super.render();\n }\n}\n\n\nconst simpleSlider = new SimpleSlider('.simple-slider');\nsimpleSlider.addSlides(images);\nsimpleSlider.render();\n\nconst textSlider = new TextSlider('.text-slider');\ntextSlider.addSlides(textSlides);\ntextSlider.render();\n\nconst automaticSlider = new AutomaticSlider('.automatic-slider');\nautomaticSlider.addSlides(textSlides);\nautomaticSlider.render();\n\n"]}